-- sample1.sql


-- ------------------------------------------------------
-- Index (인덱스)
-- ------------------------------------------------------
--  가. 데이터베이스 성능에서 매우 중요한 역할 담당
--  나. 단순컬럼 또는 복합컬럼에 대해 인덱스 객체 생성가능
--  다. 인덱스 객체 안에는 크게 아래의 두가지 정보를 가지고 있음:
--      (1) ROWID - 테이블의 각 행의 논리적인 주소값 저장
--      (2) 단순/복합 컬럼 - 인덱스를 생성한 컬럼 데이터
--  라. 실제 데이터(각 행)의 논리적 주소인 ROWID를 사용하면,
--      Table Full Scan 방식이 아닌, Index Scan 방식을 사용하여,
--      검색된 데이터를 테이블에서 랜덤하게 블록에서 접근가능.
--  마. ROWID(각 행의 논리적 주소값)를 저장하고 있는 오라클 객체가 인덱스임
--  바. 인덱스 안의 ROWID 정보를 이용하여, 필요한 데이터를 검색하는 방식
--      이를, Index Scan 이라 한다.
--  사. 인덱스는 ROWID + Column Datas 를, B-tree 구조로 저장
--      (B-tree.jpg 이미지 참고)
-- ------------------------------------------------------
--  * 사전 필요지식:
--    a. Oracle Block
--      - 가장 최소단위의 논리적인 구조, 입출력(I/O) 단위
--      - 기본크기: 8KB (설정으로 조정가능)
--      - ***실제 데이터(행들)를 block 단위로 관리***
--      - 각 block 마다, **고유한 아이디(id)** 부여 (= block id)
--      - 한 block 내에, 최대크기(8kb)내에서, **여러 행들 저장**
--      - 한 block 내의 각 행들에, **고유한 행번호** 부여 (= row id)
--    b. Table Full Scan 방식 (Index 객체가 없거나, 사용하지 않을 때)
--      - 검색할 모든 데이터(행들)를 접근하기 위해, 
--        처음부터 끝까지 **모든 block들을 검색**
--    c. Index Scan 방식 (Index 객체를 사용하여, 실제 데이터에 접근)
--      - 검색된 데이터(행들)을 가장 빠르게 찾는 방법
--      - 블록 아이디(block id)와 행번호(row id) 이용해서,
--        검색된 데이터(행들)에 접근
--    d. 검색된 데이터(행들)를 제대로 접근(access)하기 위해서는,
--       아래의 **4가지 정보가 반드시 필요** :
--      (1) 파일 아이디 - 어느 *.dbf 파일에 저장되어 있는가?
--          - 실제 데이터가 저장되어 있는 물리적인 파일
--          - 각 DBF 파일마다, **파일 아이디** 부여 (식별위해)
--          - $ORACLE_HOME/oradata/<cdbname>/*.dbf
--          - $ORACLE_HOME/oradata/<cdbname>/<pdbname>/*.dbf
--          - 테이블들 저장
--      (2) 객체 아이디 - 어느 table 에 저장되어 있는가?
--          - 각 테이블 마다, **객체 아이디** 부여 (식별위해)
--          - 테이블 내에, 실제 데이터가 최종적으로 저장/관리됨
--      (3) 블록 아이디 - 어느 blocks 에 저장되어 있는가?
--          - 각 테이블 내의 실제 데이터(행들)는, 다시
--            해당 테이블의 최소 입/출력 단위인, block 내에 저장됨
--          - 각 block 마다, **block id** 부여 (식별위해)
--      (4) 행 번호 - 찾은 blocks 내에서, 몇번 째로 저장되어 있는가?
--          - 각 block 내에는, 최대8kb 내에서, 여러행 들 저장
--          - 각 block 내의 각 행마다, **row num** 부여 (식별위해)
--    e. ROWID (의사컬럼) - 각 행의 논리적인 주소를 가진 의사컬럼
--      - 위 d 의 4가지 정보(파일아이디/객체아이디/블록아이디/행번호)를 가지고 있음
--      - 인덱스(Index) 객체가 ROWID 를 하나의 요소로 가지고 있음
--      - 인덱스는 안에 있는 ROWID를 이용하여, 검색된 데이터를 빠르게 접근가능
-- ------------------------------------------------------